def findBestItem(friend, excludedItems):
    items = friend.findItems()
    bestItem = None
    bestItemValue = 0
    for item in items:
        
        if item not in excludedItems:
            if bestItemValue < item.value / friend.distanceTo(item):
                bestItemValue = item.value / friend.distanceTo(item)
                bestItem = item
                
    return bestItem


while True:
    peasants = hero.findByType("peasant")
    
    claimedItems = []
    for peasant in peasants:
        enemy = peasant.findNearestEnemy()
        if enemy.target == peasant:
            
            if hero.gold > hero.costOf('decoy'):
                
                hero.command(peasant, 'buildXY', 'decoy', peasant.pos.x - 2, peasant.pos.y)
                
                continue
            pass
        item = findBestItem(peasant, claimedItems)
        if item:
            # hero.say(item.pos.x)
            
            claimedItems.append(item)
          
            hero.command(peasant, 'move', item.pos)
